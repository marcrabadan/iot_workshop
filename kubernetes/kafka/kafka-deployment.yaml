apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-broker
  namespace: iot
spec:
  serviceName: kafka-broker
  replicas: 2
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      containers:
      - name: kafka-broker
        image: confluentinc/cp-kafka:latest
        command:
        - sh
        - -c
        - 'export KAFKA_BROKER_ID=$(hostname | grep -o "[[:digit:]]*$") && export KAFKA_ADVERTISED_LISTENERS="INTERNAL://kafka-broker-$KAFKA_BROKER_ID.kafka-broker.iot.svc.cluster.local:9092" && /etc/confluent/docker/run'
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper.iot.svc.cluster.local:2181/kafka"
        - name: KAFKA_LISTENERS
          value: "INTERNAL://:9092"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "INTERNAL:PLAINTEXT"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "INTERNAL"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_LOG_DIRS
          value: /var/lib/kafka/data/topics
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_NUM_PARTITIONS
          value: "25"
        - name: KAFKA_LOG_RETENTION_MS
          value: "259200000" # 72h
        ports:
        - containerPort: 9092
          name: broker
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 2000m
            memory: 2Gi
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: data
          mountPath: /var/lib/kafka/data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
